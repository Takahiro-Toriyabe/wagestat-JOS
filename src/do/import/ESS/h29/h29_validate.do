/*-----------------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided
    in 'https://github.com/Takahiro-Toriyabe/MicroDataCleaning'.
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        rename.do:    Rename variable to harmonize several data

    WARNING:
        1. The generated do-files do not necessarily correct. If you find
           something wrong regarding the program or the resulting do-file(s),
           please report at the above GitHub web page.

        2. _validate.do checks if each variable has the values that it is
           supposed to have (only for categorical variables).

        3. rename.do is generated by finding a variable with a similar variable
           description and, if any, a similar variable name from the base data.
           So it is quite likely that some variables are renamed incorrectly.
           Please check and modify rename.do.

        4. Although value labels are put for each individual data, the labels
           are not put for the appended data, because the categories for each
           variable are very likely to be inconsistent across years.

        5. There is no file to make variable values consistent across different
           data.


    Source: 
    Date: 2021/02/17 14:32:29
-----------------------------------------------------------------------------*/


capture count if RES_NENTUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:RES_NENTUKI} (調査実施年月)"
}
capture assert inlist(RES_NENTUKI, 201710, .)
if _rc!=0 {
    display as error "WARNING: {bf:RES_NENTUKI} (調査実施年月) may have invalid values (Check layout sheet)"
}


capture count if N_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_KEN} (都道府県番号)"
}


capture count if N_KENNAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_KENNAI} (都道府県内一連番号)"
}


capture count if N_SETAI1==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_SETAI1} (居住者の有無(世帯番号))"
}


capture count if N_SETAI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_SETAI2} (抽出単位番号(世帯番号))"
}


capture count if N_SETAI3==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_SETAI3} (世帯一連番号(世帯番号))"
}


capture count if N_SETAIINNO==.
if r(N)==_N {
    display as error "Only missing value: {bf:N_SETAIINNO} (世帯員番号)"
}


capture count if C_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:C_KEN} (都道府県(調査実施時))"
}


capture count if C_CITY==.
if r(N)==_N {
    display as error "Only missing value: {bf:C_CITY} (市区町村(調査実施時))"
}


capture count if R_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_KEN} (都道府県番号)"
}


capture count if R_RITSUBLKNUM==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_RITSUBLKNUM} (県内経済圏用)"
}


capture count if R_SHUKEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:R_SHUKEI} (集計用乗率)"
}


capture count if KC_JININ==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_JININ} (世帯人員(15歳以上))"
}


capture count if KC_1_SEX==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_1_SEX} (1男女の別)"
}
capture assert inlist(KC_1_SEX, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_1_SEX} (1男女の別) may have invalid values (Check layout sheet)"
}


capture count if KC_1_HAIGU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_1_HAIGU} (1配偶関係)"
}
capture assert inlist(KC_1_HAIGU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_1_HAIGU} (1配偶関係) may have invalid values (Check layout sheet)"
}


capture count if KC_2_TSUZUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_2_TSUZUKI} (2続き柄)"
}
capture assert inlist(KC_2_TSUZUKI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_2_TSUZUKI} (2続き柄) may have invalid values (Check layout sheet)"
}


capture count if KC_3_GENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_3_GENGO} (3出生年月(元号))"
}
capture assert inlist(KC_3_GENGO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_3_GENGO} (3出生年月(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_3_NEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_3_NEN} (3出生年月(年))"
}


capture count if KC_3_TSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_3_TSUKI} (3出生年月(月))"
}


capture count if KC_4_1_SHUGAKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_4_1_SHUGAKU} (4(1)就学状況)"
}
capture assert inlist(KC_4_1_SHUGAKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_4_1_SHUGAKU} (4(1)就学状況) may have invalid values (Check layout sheet)"
}


capture count if KC_4_1_JIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_4_1_JIKI} (4(1)卒業時期(区分))"
}
capture assert inlist(KC_4_1_JIKI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_4_1_JIKI} (4(1)卒業時期(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_4_1_GENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_4_1_GENGO} (4(1)卒業時期(元号))"
}
capture assert inlist(KC_4_1_GENGO, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_4_1_GENGO} (4(1)卒業時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_4_1_NEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_4_1_NEN} (4(1)卒業時期(年))"
}


capture count if KC_4_2_GAKKO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_4_2_GAKKO} (4(2)学校区分)"
}
capture assert inlist(KC_4_2_GAKKO, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_4_2_GAKKO} (4(2)学校区分) may have invalid values (Check layout sheet)"
}


capture count if KC_5_1_GENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_1_GENGO} (5(1)居住開始時期(区分・元号))"
}
capture assert inlist(KC_5_1_GENGO, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_5_1_GENGO} (5(1)居住開始時期(区分・元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_5_1_NEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_1_NEN} (5(1)居住開始時期(年))"
}


capture count if KC_5_1_TSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_1_TSUKI} (5(1)居住開始時期(月))"
}


capture count if KC_5_2_RIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_2_RIYU} (5(2)居住理由)"
}
capture assert inlist(KC_5_2_RIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_5_2_RIYU} (5(2)居住理由) may have invalid values (Check layout sheet)"
}


capture count if KC_5_3_ZENJUKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_3_ZENJUKBN} (5(3)前住地(区分))"
}
capture assert inlist(KC_5_3_ZENJUKBN, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_5_3_ZENJUKBN} (5(3)前住地(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_5_3_ZENJUKEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_5_3_ZENJUKEN} (5(3)前住地(都道府県))"
}


capture count if KC_6_SHUNYUMAIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYUMAIN} (6収入の種類(主))"
}
capture assert inlist(KC_6_SHUNYUMAIN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYUMAIN} (6収入の種類(主)) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_1} (6収入の種類(1)賃金・給料)"
}
capture assert inlist(KC_6_SHUNYU_1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_1} (6収入の種類(1)賃金・給料) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_2} (6収入の種類(2)事業収入)"
}
capture assert inlist(KC_6_SHUNYU_2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_2} (6収入の種類(2)事業収入) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_3} (6収入の種類(3)内職収入)"
}
capture assert inlist(KC_6_SHUNYU_3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_3} (6収入の種類(3)内職収入) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_4} (6収入の種類(4)年金・恩給)"
}
capture assert inlist(KC_6_SHUNYU_4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_4} (6収入の種類(4)年金・恩給) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_5} (6収入の種類(5)雇用保険)"
}
capture assert inlist(KC_6_SHUNYU_5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_5} (6収入の種類(5)雇用保険) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_6} (6収入の種類(6)その他の給付)"
}
capture assert inlist(KC_6_SHUNYU_6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_6} (6収入の種類(6)その他の給付) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_7} (6収入の種類(7)仕送り)"
}
capture assert inlist(KC_6_SHUNYU_7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_7} (6収入の種類(7)仕送り) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_8==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_8} (6収入の種類(8)家賃・地代)"
}
capture assert inlist(KC_6_SHUNYU_8, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_8} (6収入の種類(8)家賃・地代) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_9} (6収入の種類(9)利子・配当)"
}
capture assert inlist(KC_6_SHUNYU_9, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_9} (6収入の種類(9)利子・配当) may have invalid values (Check layout sheet)"
}


capture count if KC_6_SHUNYU_10==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_6_SHUNYU_10} (6収入の種類(10)その他)"
}
capture assert inlist(KC_6_SHUNYU_10, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_6_SHUNYU_10} (6収入の種類(10)その他) may have invalid values (Check layout sheet)"
}


capture count if KC_7_SHUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_7_SHUGYO} (7就業状態)"
}
capture assert inlist(KC_7_SHUGYO, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_7_SHUGYO} (7就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_A1_CHII==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A1_CHII} (A1従業上の地位)"
}
capture assert inlist(KC_A1_CHII, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A1_CHII} (A1従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if KC_A1_2_KIGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A1_2_KIGYO} (A1-2起業の有無)"
}
capture assert inlist(KC_A1_2_KIGYO, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A1_2_KIGYO} (A1-2起業の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_A1_3_KOYOKIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A1_3_KOYOKIKAN} (A1-3雇用契約期間の有無)"
}
capture assert inlist(KC_A1_3_KOYOKIKAN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A1_3_KOYOKIKAN} (A1-3雇用契約期間の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_A1_4_KOSHIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A1_4_KOSHIN} (A1-4契約更新の有無)"
}
capture assert inlist(KC_A1_4_KOSHIN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A1_4_KOSHIN} (A1-4契約更新の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_A1_4_KOSHINSU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A1_4_KOSHINSU} (A1-4契約更新の回数)"
}


capture count if KC_A2_1_SOSHIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A2_1_SOSHIKI} (A2(1)経営組織)"
}
capture assert inlist(KC_A2_1_SOSHIKI, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A2_1_SOSHIKI} (A2(1)経営組織) may have invalid values (Check layout sheet)"
}


capture count if KC_A2_23_SANGS==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A2_23_SANGS} (A2(2)(3)産業)"
}


capture count if KC_A3_SHOKS==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A3_SHOKS} (A3職業)"
}


capture count if KC_A4_KIBO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A4_KIBO} (A4従業者規模)"
}
capture assert inlist(KC_A4_KIBO, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A4_KIBO} (A4従業者規模) may have invalid values (Check layout sheet)"
}


capture count if KC_A5_1_NISSU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A5_1_NISSU} (A5(1)年間日数)"
}
capture assert inlist(KC_A5_1_NISSU, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A5_1_NISSU} (A5(1)年間日数) may have invalid values (Check layout sheet)"
}


capture count if KC_A5_2_KISOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A5_2_KISOKU} (A5(2)規則性)"
}
capture assert inlist(KC_A5_2_KISOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A5_2_KISOKU} (A5(2)規則性) may have invalid values (Check layout sheet)"
}


capture count if KC_A5_3_JIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A5_3_JIKAN} (A5(3)週時間)"
}
capture assert inlist(KC_A5_3_JIKAN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A5_3_JIKAN} (A5(3)週時間) may have invalid values (Check layout sheet)"
}


capture count if KC_A6_SHOTOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A6_SHOTOKU} (A6年間所得)"
}
capture assert inlist(KC_A6_SHOTOKU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A6_SHOTOKU} (A6年間所得) may have invalid values (Check layout sheet)"
}


capture count if KC_A7_STARTGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A7_STARTGENGO} (A7就業開始時期(元号))"
}
capture assert inlist(KC_A7_STARTGENGO, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A7_STARTGENGO} (A7就業開始時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_A7_STARTNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A7_STARTNEN} (A7就業開始時期(年))"
}


capture count if KC_A7_STARTTSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A7_STARTTSUKI} (A7就業開始時期(月))"
}


capture count if KC_A8_SHUGYORIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A8_SHUGYORIYU} (A8就業理由)"
}
capture assert inlist(KC_A8_SHUGYORIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A8_SHUGYORIYU} (A8就業理由) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_1} (A9雇用形態理由(1)都合のよい時間)"
}
capture assert inlist(KC_A9_KEITAIRIYU_1, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_1} (A9雇用形態理由(1)都合のよい時間) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_2} (A9雇用形態理由(2)家計の補助・学費)"
}
capture assert inlist(KC_A9_KEITAIRIYU_2, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_2} (A9雇用形態理由(2)家計の補助・学費) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_3} (A9雇用形態理由(3)家事・育児・介護)"
}
capture assert inlist(KC_A9_KEITAIRIYU_3, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_3} (A9雇用形態理由(3)家事・育児・介護) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_4} (A9雇用形態理由(4)通勤時間)"
}
capture assert inlist(KC_A9_KEITAIRIYU_4, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_4} (A9雇用形態理由(4)通勤時間) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_5} (A9雇用形態理由(5)専門的な技能)"
}
capture assert inlist(KC_A9_KEITAIRIYU_5, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_5} (A9雇用形態理由(5)専門的な技能) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_6} (A9雇用形態理由(6)正社員がない)"
}
capture assert inlist(KC_A9_KEITAIRIYU_6, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_6} (A9雇用形態理由(6)正社員がない) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYU_7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYU_7} (A9雇用形態理由(7)その他)"
}
capture assert inlist(KC_A9_KEITAIRIYU_7, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYU_7} (A9雇用形態理由(7)その他) may have invalid values (Check layout sheet)"
}


capture count if KC_A9_KEITAIRIYUMAIN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A9_KEITAIRIYUMAIN} (A9雇用形態理由(主))"
}
capture assert inlist(KC_A9_KEITAIRIYUMAIN, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A9_KEITAIRIYUMAIN} (A9雇用形態理由(主)) may have invalid values (Check layout sheet)"
}


capture count if KC_A10_CHOSEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A10_CHOSEI} (A10時間・日数の調整)"
}
capture assert inlist(KC_A10_CHOSEI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A10_CHOSEI} (A10時間・日数の調整) may have invalid values (Check layout sheet)"
}


capture count if KC_A11_KEIZOKUKIBO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A11_KEIZOKUKIBO} (A11継続希望)"
}
capture assert inlist(KC_A11_KEIZOKUKIBO, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A11_KEIZOKUKIBO} (A11継続希望) may have invalid values (Check layout sheet)"
}


capture count if KC_A11_2_TENSHOKURIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A11_2_TENSHOKURIYU} (A11-2転職希望理由)"
}
capture assert inlist(KC_A11_2_TENSHOKURIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A11_2_TENSHOKURIYU} (A11-2転職希望理由) may have invalid values (Check layout sheet)"
}


capture count if KC_A11_3_TENSHOKUKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A11_3_TENSHOKUKEITAI} (A11-3転職希望形態)"
}
capture assert inlist(KC_A11_3_TENSHOKUKEITAI, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A11_3_TENSHOKUKEITAI} (A11-3転職希望形態) may have invalid values (Check layout sheet)"
}


capture count if KC_A11_4_KYUSHOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A11_4_KYUSHOKU} (A11-4求職活動)"
}
capture assert inlist(KC_A11_4_KYUSHOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A11_4_KYUSHOKU} (A11-4求職活動) may have invalid values (Check layout sheet)"
}


capture count if KC_A12_KIBOJIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A12_KIBOJIKAN} (A12就業時間希望)"
}
capture assert inlist(KC_A12_KIBOJIKAN, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A12_KIBOJIKAN} (A12就業時間希望) may have invalid values (Check layout sheet)"
}


capture count if KC_A13_FUKUKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A13_FUKUKBN} (A13副業(有無・従業上の地位))"
}
capture assert inlist(KC_A13_FUKUKBN, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A13_FUKUKBN} (A13副業(有無・従業上の地位)) may have invalid values (Check layout sheet)"
}


capture count if KC_A14_FUKUSANGD==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A14_FUKUSANGD} (A14副業の産業)"
}


capture count if KC_A15_ZENSHUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A15_ZENSHUGYO} (A151年前の就業状態)"
}
capture assert inlist(KC_A15_ZENSHUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A15_ZENSHUGYO} (A151年前の就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_A16_ZENSHUGYOUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_A16_ZENSHUGYOUMU} (A16前職の有無)"
}
capture assert inlist(KC_A16_ZENSHUGYOUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_A16_ZENSHUGYOUMU} (A16前職の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_B1_KIBOUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B1_KIBOUMU} (B1就業希望の有無)"
}
capture assert inlist(KC_B1_KIBOUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B1_KIBOUMU} (B1就業希望の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_B2_KIBORIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B2_KIBORIYU} (B2就業希望の理由)"
}
capture assert inlist(KC_B2_KIBORIYU, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B2_KIBORIYU} (B2就業希望の理由) may have invalid values (Check layout sheet)"
}


capture count if KC_B3_KIBOSHOKUSHU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B3_KIBOSHOKUSHU} (B3就業希望職種)"
}
capture assert inlist(KC_B3_KIBOSHOKUSHU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B3_KIBOSHOKUSHU} (B3就業希望職種) may have invalid values (Check layout sheet)"
}


capture count if KC_B4_KIBOKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B4_KIBOKEITAI} (B4就業希望形態)"
}
capture assert inlist(KC_B4_KIBOKEITAI, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B4_KIBOKEITAI} (B4就業希望形態) may have invalid values (Check layout sheet)"
}


capture count if KC_B5_KYUSHOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B5_KYUSHOKU} (B5求職活動)"
}
capture assert inlist(KC_B5_KYUSHOKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B5_KYUSHOKU} (B5求職活動) may have invalid values (Check layout sheet)"
}


capture count if KC_B6_HIKYUSHOKURIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B6_HIKYUSHOKURIYU} (B6非求職の理由)"
}
capture assert inlist(KC_B6_HIKYUSHOKURIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B6_HIKYUSHOKURIYU} (B6非求職の理由) may have invalid values (Check layout sheet)"
}


capture count if KC_B7_KIKANKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B7_KIKANKBN} (B7求職期間(区分))"
}
capture assert inlist(KC_B7_KIKANKBN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B7_KIKANKBN} (B7求職期間(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_B7_KIKANNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B7_KIKANNEN} (B7求職期間(年))"
}


capture count if KC_B7_KIKANTSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B7_KIKANTSUKI} (B7求職期間(月))"
}


capture count if KC_B8_KIBOJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B8_KIBOJIKI} (B8就業希望時期)"
}
capture assert inlist(KC_B8_KIBOJIKI, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B8_KIBOJIKI} (B8就業希望時期) may have invalid values (Check layout sheet)"
}


capture count if KC_B9_HIKIBORIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B9_HIKIBORIYU} (B9就業非希望理由)"
}
capture assert inlist(KC_B9_HIKIBORIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B9_HIKIBORIYU} (B9就業非希望理由) may have invalid values (Check layout sheet)"
}


capture count if KC_B10_ZENSHUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B10_ZENSHUGYO} (B101年前の就業状態)"
}
capture assert inlist(KC_B10_ZENSHUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B10_ZENSHUGYO} (B101年前の就業状態) may have invalid values (Check layout sheet)"
}


capture count if KC_B11_ZENSHUGYOUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_B11_ZENSHUGYOUMU} (B11前職の有無)"
}
capture assert inlist(KC_B11_ZENSHUGYOUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_B11_ZENSHUGYOUMU} (B11前職の有無) may have invalid values (Check layout sheet)"
}


capture count if KC_C1_ENDJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C1_ENDJIKI} (C1離職時期(区分))"
}
capture assert inlist(KC_C1_ENDJIKI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C1_ENDJIKI} (C1離職時期(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_C1_ENDGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C1_ENDGENGO} (C1離職時期(元号))"
}
capture assert inlist(KC_C1_ENDGENGO, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C1_ENDGENGO} (C1離職時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_C1_ENDNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C1_ENDNEN} (C1離職時期(年))"
}


capture count if KC_C1_ENDTSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C1_ENDTSUKI} (C1離職時期(月))"
}


capture count if KC_C2_KIKANKBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C2_KIKANKBN} (C2就業期間(区分))"
}
capture assert inlist(KC_C2_KIKANKBN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C2_KIKANKBN} (C2就業期間(区分)) may have invalid values (Check layout sheet)"
}


capture count if KC_C2_KIKANNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C2_KIKANNEN} (C2就業期間(年))"
}


capture count if KC_C2_KIKANTSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C2_KIKANTSUKI} (C2就業期間(か月))"
}


capture count if KC_C3_RIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C3_RIYU} (C3離職理由)"
}
capture assert inlist(KC_C3_RIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C3_RIYU} (C3離職理由) may have invalid values (Check layout sheet)"
}


capture count if KC_C4_CHII==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C4_CHII} (C4前職の従業上の地位)"
}
capture assert inlist(KC_C4_CHII, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C4_CHII} (C4前職の従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if KC_C5_KOYOKIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C5_KOYOKIKAN} (C5前職の雇用契約期間)"
}
capture assert inlist(KC_C5_KOYOKIKAN, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_C5_KOYOKIKAN} (C5前職の雇用契約期間) may have invalid values (Check layout sheet)"
}


capture count if KC_C6_SANGD==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C6_SANGD} (C6前職の産業)"
}


capture count if KC_C7_SHOKD==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_C7_SHOKD} (C7前職の職業)"
}


capture count if KC_D1_KBN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_D1_KBN} (D1初職と現職・前職との関係)"
}
capture assert inlist(KC_D1_KBN, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_D1_KBN} (D1初職と現職・前職との関係) may have invalid values (Check layout sheet)"
}


capture count if KC_D2_STARTGENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_D2_STARTGENGO} (D2初職時期(元号))"
}
capture assert inlist(KC_D2_STARTGENGO, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_D2_STARTGENGO} (D2初職時期(元号)) may have invalid values (Check layout sheet)"
}


capture count if KC_D2_STARTNEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_D2_STARTNEN} (D2初職時期(年))"
}


capture count if KC_D2_STARTTSUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_D2_STARTTSUKI} (D2初職時期(月))"
}


capture count if KC_D3_CHII==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_D3_CHII} (D3初職の従業上の地位)"
}
capture assert inlist(KC_D3_CHII, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_D3_CHII} (D3初職の従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if KC_G1_NENSHU==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G1_NENSHU} (G1世帯の年間収入)"
}
capture assert inlist(KC_G1_NENSHU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, .)
if _rc!=0 {
    display as error "WARNING: {bf:KC_G1_NENSHU} (G1世帯の年間収入) may have invalid values (Check layout sheet)"
}


capture count if KC_G2_15MIMANJININ==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANJININ} (G215歳未満の合計)"
}


capture count if KC_G2_15MIMANNENREI0==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI0} (G215歳未満の内訳0歳)"
}


capture count if KC_G2_15MIMANNENREI1==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI1} (G215歳未満の内訳1歳)"
}


capture count if KC_G2_15MIMANNENREI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI2} (G215歳未満の内訳2歳)"
}


capture count if KC_G2_15MIMANNENREI3==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI3} (G215歳未満の内訳3歳)"
}


capture count if KC_G2_15MIMANNENREI4==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI4} (G215歳未満の内訳4歳)"
}


capture count if KC_G2_15MIMANNENREI5==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI5} (G215歳未満の内訳5歳)"
}


capture count if KC_G2_15MIMANNENREI6==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI6} (G215歳未満の内訳6歳)"
}


capture count if KC_G2_15MIMANNENREI7==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI7} (G215歳未満の内訳7歳)"
}


capture count if KC_G2_15MIMANNENREI8==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI8} (G215歳未満の内訳8歳)"
}


capture count if KC_G2_15MIMANNENREI9==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI9} (G215歳未満の内訳9歳)"
}


capture count if KC_G2_15MIMANNENREI10==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI10} (G215歳未満の内訳10歳)"
}


capture count if KC_G2_15MIMANNENREI11==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI11} (G215歳未満の内訳11歳)"
}


capture count if KC_G2_15MIMANNENREI12==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI12} (G215歳未満の内訳12歳)"
}


capture count if KC_G2_15MIMANNENREI13==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI13} (G215歳未満の内訳13歳)"
}


capture count if KC_G2_15MIMANNENREI14==.
if r(N)==_N {
    display as error "Only missing value: {bf:KC_G2_15MIMANNENREI14} (G215歳未満の内訳14歳)"
}


capture count if S_IPPAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_IPPAN} (一般・単身世帯の別)"
}
capture assert inlist(S_IPPAN, 1, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_IPPAN} (一般・単身世帯の別) may have invalid values (Check layout sheet)"
}


capture count if S_KAZOKURUI12==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_KAZOKURUI12} (特定家族類型12区分)"
}
capture assert inlist(S_KAZOKURUI12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_KAZOKURUI12} (特定家族類型12区分) may have invalid values (Check layout sheet)"
}


capture count if K_AGE==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE} (各歳)"
}


capture count if K_AGE5==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE5} (5歳階級)"
}
capture assert inlist(K_AGE5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE5} (5歳階級) may have invalid values (Check layout sheet)"
}


capture count if K_AGE10==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE10} (10歳階級)"
}
capture assert inlist(K_AGE10, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE10} (10歳階級) may have invalid values (Check layout sheet)"
}


capture count if YH_KOKUCHO_SANSYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KOKUCHO_SANSYO} (産業小分類・国調分類符号(現職))"
}


capture count if YH_KOKUCHO_SHOSYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KOKUCHO_SHOSYO} (職業小分類・国調分類符号(現職))"
}


capture count if YF_KOKUCHO_SANDAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_KOKUCHO_SANDAI} (産業大分類・国調分類符号(副業))"
}


capture count if Z_KOKUCHO_SANDAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_KOKUCHO_SANDAI} (産業大分類・国調分類符号(前職))"
}


capture count if Z_KOKUCHO_SHODAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_KOKUCHO_SHODAI} (職業大分類・国調分類符号(前職))"
}


