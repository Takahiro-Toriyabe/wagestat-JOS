/*-----------------------------------------------------------------------------
    <README>
    This do-file is generated from the python program provided
    in 'https://github.com/Takahiro-Toriyabe/MicroDataCleaning'.
        _const.do:    Import fixed-length data
        _var.do:      Put variable labels
        _val.do:      Put value labels
        _validate.do: Check if the data seems correctly imported
        rename.do:    Rename variable to harmonize several data

    WARNING:
        1. The generated do-files do not necessarily correct. If you find
           something wrong regarding the program or the resulting do-file(s),
           please report at the above GitHub web page.

        2. _validate.do checks if each variable has the values that it is
           supposed to have (only for categorical variables).

        3. rename.do is generated by finding a variable with a similar variable
           description and, if any, a similar variable name from the base data.
           So it is quite likely that some variables are renamed incorrectly.
           Please check and modify rename.do.

        4. Although value labels are put for each individual data, the labels
           are not put for the appended data, because the categories for each
           variable are very likely to be inconsistent across years.

        5. There is no file to make variable values consistent across different
           data.


    Source: 
    Date: 2021/03/12 16:37:32
-----------------------------------------------------------------------------*/


capture count if CHO_YEAR==.
if r(N)==_N {
    display as error "Only missing value: {bf:CHO_YEAR} (調査年)"
}
capture assert inlist(CHO_YEAR, 1987, .)
if _rc!=0 {
    display as error "WARNING: {bf:CHO_YEAR} (調査年) may have invalid values (Check layout sheet)"
}


capture count if CHO_MONTH==.
if r(N)==_N {
    display as error "Only missing value: {bf:CHO_MONTH} (調査月)"
}
capture assert inlist(CHO_MONTH, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:CHO_MONTH} (調査月) may have invalid values (Check layout sheet)"
}


capture count if CHIKI_KEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:CHIKI_KEN} (都道府県)"
}


capture count if CHIKI_CITY==.
if r(N)==_N {
    display as error "Only missing value: {bf:CHIKI_CITY} (市区町村)"
}


capture count if CHIKI_CHONO==.
if r(N)==_N {
    display as error "Only missing value: {bf:CHIKI_CHONO} (調査区番号)"
}


capture count if WAT_SHUKEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:WAT_SHUKEI} (集計用乗率)"
}


capture count if S_RENBAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_RENBAN} (調査区内連番)"
}


capture count if S_ORGBANGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_ORGBANGO} (オリジナル・コード)"
}


capture count if S_SETIINNO==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_SETIINNO} (世帯員番号)"
}


capture count if S_IPPAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_IPPAN} (一般世帯・単身世帯の別)"
}
capture assert inlist(S_IPPAN, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_IPPAN} (一般世帯・単身世帯の別) may have invalid values (Check layout sheet)"
}


capture count if S_KAZOKURUI==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_KAZOKURUI} (特定家族類型)"
}
capture assert inlist(S_KAZOKURUI, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_KAZOKURUI} (特定家族類型) may have invalid values (Check layout sheet)"
}


capture count if S_JIN0==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN0} (0才)"
}
capture assert inlist(S_JIN0, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN0} (0才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN1==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN1} (1才)"
}
capture assert inlist(S_JIN1, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN1} (1才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN2==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN2} (2才)"
}
capture assert inlist(S_JIN2, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN2} (2才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN3==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN3} (3才)"
}
capture assert inlist(S_JIN3, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN3} (3才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN4==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN4} (4才)"
}
capture assert inlist(S_JIN4, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN4} (4才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN5==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN5} (5才)"
}
capture assert inlist(S_JIN5, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN5} (5才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN6==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN6} (6才)"
}
capture assert inlist(S_JIN6, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN6} (6才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN7==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN7} (7才)"
}
capture assert inlist(S_JIN7, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN7} (7才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN8==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN8} (8才)"
}
capture assert inlist(S_JIN8, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN8} (8才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN9==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN9} (9才)"
}
capture assert inlist(S_JIN9, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN9} (9才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN10==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN10} (10才)"
}
capture assert inlist(S_JIN10, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN10} (10才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN11==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN11} (11才)"
}
capture assert inlist(S_JIN11, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN11} (11才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN12==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN12} (12才)"
}
capture assert inlist(S_JIN12, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN12} (12才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN13==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN13} (13才)"
}
capture assert inlist(S_JIN13, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN13} (13才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN14==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN14} (14才)"
}
capture assert inlist(S_JIN14, 0, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_JIN14} (14才) may have invalid values (Check layout sheet)"
}


capture count if S_JIN15MI==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN15MI} (15才未満の合計)"
}


capture count if S_JIN15IJO==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JIN15IJO} (15才以上の合計)"
}


capture count if S_OMOSYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_OMOSYU} (主な収入)"
}
capture assert inlist(S_OMOSYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_OMOSYU} (主な収入) may have invalid values (Check layout sheet)"
}


capture count if S_JYU1==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU1} (1)"
}


capture count if S_JYU2==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU2} (2)"
}


capture count if S_JYU3==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU3} (3)"
}


capture count if S_JYU4==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU4} (4)"
}


capture count if S_JYU5==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU5} (5)"
}


capture count if S_JYU6==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU6} (6)"
}


capture count if S_JYU7==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU7} (7)"
}


capture count if S_JYU8==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU8} (8)"
}


capture count if S_JYU9==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU9} (9)"
}


capture count if S_JYU10==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_JYU10} (10)"
}


capture count if S_SHOTOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:S_SHOTOKU} (年間世帯収入区分)"
}
capture assert inlist(S_SHOTOKU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:S_SHOTOKU} (年間世帯収入区分) may have invalid values (Check layout sheet)"
}


capture count if K_SEX==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_SEX} (性別)"
}
capture assert inlist(K_SEX, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_SEX} (性別) may have invalid values (Check layout sheet)"
}


capture count if K_TUZUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_TUZUKI} (10区分)"
}
capture assert inlist(K_TUZUKI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_TUZUKI} (10区分) may have invalid values (Check layout sheet)"
}


capture count if K_NENGO==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_NENGO} (年号)"
}
capture assert inlist(K_NENGO, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_NENGO} (年号) may have invalid values (Check layout sheet)"
}


capture count if K_NEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_NEN} (年)"
}


capture count if K_TUKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_TUKI} (月)"
}
capture assert inlist(K_TUKI, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_TUKI} (月) may have invalid values (Check layout sheet)"
}


capture count if K_AGE==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE} (各才)"
}


capture count if K_AGE5==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE5} (5才階級)"
}
capture assert inlist(K_AGE5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE5} (5才階級) may have invalid values (Check layout sheet)"
}


capture count if K_AGE10==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_AGE10} (10才階級)"
}
capture assert inlist(K_AGE10, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_AGE10} (10才階級) may have invalid values (Check layout sheet)"
}


capture count if K_HAIGU==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_HAIGU} (配偶関係)"
}
capture assert inlist(K_HAIGU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_HAIGU} (配偶関係) may have invalid values (Check layout sheet)"
}


capture count if K_ZENJYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_ZENJYU} (5区分)"
}
capture assert inlist(K_ZENJYU, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_ZENJYU} (5区分) may have invalid values (Check layout sheet)"
}


capture count if K_ZENJYUKEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_ZENJYUKEN} (県番)"
}


capture count if K_SOTUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_SOTUGYO} (教育区分)"
}
capture assert inlist(K_SOTUGYO, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_SOTUGYO} (教育区分) may have invalid values (Check layout sheet)"
}


capture count if K_GAKKO==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_GAKKO} (学校区分)"
}
capture assert inlist(K_GAKKO, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_GAKKO} (学校区分) may have invalid values (Check layout sheet)"
}


capture count if K_SYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:K_SYUGYO} (就業状況)"
}
capture assert inlist(K_SYUGYO, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:K_SYUGYO} (就業状況) may have invalid values (Check layout sheet)"
}


capture count if YH_JYUTII==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_JYUTII} (従業上の地位(8区分))"
}
capture assert inlist(YH_JYUTII, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_JYUTII} (従業上の地位(8区分)) may have invalid values (Check layout sheet)"
}


capture count if YH_KOSHO7==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KOSHO7} (勤め先の呼称(7区分))"
}
capture assert inlist(YH_KOSHO7, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_KOSHO7} (勤め先の呼称(7区分)) may have invalid values (Check layout sheet)"
}


capture count if YH_KEIEI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KEIEI} (経営組織)"
}
capture assert inlist(YH_KEIEI, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_KEIEI} (経営組織) may have invalid values (Check layout sheet)"
}


capture count if YH_NOHINOU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_NOHINOU} (農・非農)"
}
capture assert inlist(YH_NOHINOU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_NOHINOU} (農・非農) may have invalid values (Check layout sheet)"
}


capture count if YH_SAN3==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SAN3} (3部門)"
}
capture assert inlist(YH_SAN3, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SAN3} (3部門) may have invalid values (Check layout sheet)"
}


capture count if YH_SANDAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SANDAI} (産業大分類)"
}
capture assert inlist(YH_SANDAI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SANDAI} (産業大分類) may have invalid values (Check layout sheet)"
}


capture count if YH_SANM==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SANM} (産業中間分類)"
}
capture assert inlist(YH_SANM, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SANM} (産業中間分類) may have invalid values (Check layout sheet)"
}


capture count if YH_SANCHU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SANCHU} (産業中分類)"
}
capture assert inlist(YH_SANCHU, 1, 2, 3, 6, 8, 9, 12, 14, 16, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 40, 41, 47, 49, 55, 58, 59, 61, 69, 73, 79, 81, 87, 91, 94, 95, 97, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SANCHU} (産業中分類) may have invalid values (Check layout sheet)"
}


capture count if YH_SHODAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SHODAI} (職業大分類)"
}
capture assert inlist(YH_SHODAI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SHODAI} (職業大分類) may have invalid values (Check layout sheet)"
}


capture count if YH_SHOM==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SHOM} (職業中間分類)"
}
capture assert inlist(YH_SHOM, 0, 10, 20, 30, 40, 50, 60, 70, 75, 85, 88, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SHOM} (職業中間分類) may have invalid values (Check layout sheet)"
}


capture count if YH_KAIKYU11==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KAIKYU11} (従業者階級11区分)"
}
capture assert inlist(YH_KAIKYU11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_KAIKYU11} (従業者階級11区分) may have invalid values (Check layout sheet)"
}


capture count if YH_NISSU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_NISSU} (年間就業日数6区分)"
}
capture assert inlist(YH_NISSU, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_NISSU} (年間就業日数6区分) may have invalid values (Check layout sheet)"
}


capture count if YH_JYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_JYUGYO} (従業状況)"
}
capture assert inlist(YH_JYUGYO, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_JYUGYO} (従業状況) may have invalid values (Check layout sheet)"
}


capture count if YH_JIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_JIKAN} (週間就業時間7区分)"
}
capture assert inlist(YH_JIKAN, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_JIKAN} (週間就業時間7区分) may have invalid values (Check layout sheet)"
}


capture count if YH_SHOTOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SHOTOKU} (個人収入)"
}
capture assert inlist(YH_SHOTOKU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SHOTOKU} (個人収入) may have invalid values (Check layout sheet)"
}


capture count if YH_SYUISIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SYUISIKI} (就業希望意識)"
}
capture assert inlist(YH_SYUISIKI, 1, 2, 3, 4, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SYUISIKI} (就業希望意識) may have invalid values (Check layout sheet)"
}


capture count if YH_SYUZOGEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SYUZOGEN} (就業希望時間増減)"
}
capture assert inlist(YH_SYUZOGEN, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SYUZOGEN} (就業希望時間増減) may have invalid values (Check layout sheet)"
}


capture count if YH_SYURIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SYURIYU} (就業希望理由)"
}
capture assert inlist(YH_SYURIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SYURIYU} (就業希望理由) may have invalid values (Check layout sheet)"
}


capture count if YH_SYUKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_SYUKEITAI} (就業希望形態)"
}
capture assert inlist(YH_SYUKEITAI, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_SYUKEITAI} (就業希望形態) may have invalid values (Check layout sheet)"
}


capture count if YH_KATUDO==.
if r(N)==_N {
    display as error "Only missing value: {bf:YH_KATUDO} (求職活動の有無)"
}
capture assert inlist(YH_KATUDO, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YH_KATUDO} (求職活動の有無) may have invalid values (Check layout sheet)"
}


capture count if YF_FUKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_FUKU} (副業の有無)"
}
capture assert inlist(YF_FUKU, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_FUKU} (副業の有無) may have invalid values (Check layout sheet)"
}


capture count if YF_JYUTII==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_JYUTII} (従業上の地位)"
}
capture assert inlist(YF_JYUTII, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_JYUTII} (従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if YF_NOHINOU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_NOHINOU} (産業農・非農)"
}
capture assert inlist(YF_NOHINOU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_NOHINOU} (産業農・非農) may have invalid values (Check layout sheet)"
}


capture count if YF_SAN3==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_SAN3} (産業3部門)"
}
capture assert inlist(YF_SAN3, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_SAN3} (産業3部門) may have invalid values (Check layout sheet)"
}


capture count if YF_SANDAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_SANDAI} (産業大分類)"
}
capture assert inlist(YF_SANDAI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_SANDAI} (産業大分類) may have invalid values (Check layout sheet)"
}


capture count if YF_SANCHU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_SANCHU} (産業中分類)"
}
capture assert inlist(YF_SANCHU, 1, 2, 3, 6, 8, 9, 12, 14, 16, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 40, 41, 47, 49, 55, 58, 59, 61, 69, 73, 79, 81, 87, 91, 94, 95, 97, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_SANCHU} (産業中分類) may have invalid values (Check layout sheet)"
}


capture count if YF_SHOTOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YF_SHOTOKU} (個人収入)"
}
capture assert inlist(YF_SHOTOKU, 1, 2, 3, 4, 5, 6, 7, 8, 9, .)
if _rc!=0 {
    display as error "WARNING: {bf:YF_SHOTOKU} (個人収入) may have invalid values (Check layout sheet)"
}


capture count if YZ_KEIZOKU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YZ_KEIZOKU} (継続就業か否か)"
}
capture assert inlist(YZ_KEIZOKU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:YZ_KEIZOKU} (継続就業か否か) may have invalid values (Check layout sheet)"
}


capture count if YZ_KEINEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:YZ_KEINEN} (継続年数)"
}


capture count if YZ_SYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:YZ_SYUGYO} (一年前就業状況)"
}
capture assert inlist(YZ_SYUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:YZ_SYUGYO} (一年前就業状況) may have invalid values (Check layout sheet)"
}


capture count if YZ_SYURIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YZ_SYURIYU} (一年前就業理由)"
}
capture assert inlist(YZ_SYURIYU, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:YZ_SYURIYU} (一年前就業理由) may have invalid values (Check layout sheet)"
}


capture count if YZ_ZENUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:YZ_ZENUMU} (前職の有無)"
}
capture assert inlist(YZ_ZENUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:YZ_ZENUMU} (前職の有無) may have invalid values (Check layout sheet)"
}


capture count if M_SYUKIBOU==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_SYUKIBOU} (有無)"
}
capture assert inlist(M_SYUKIBOU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_SYUKIBOU} (有無) may have invalid values (Check layout sheet)"
}


capture count if M_SYURIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_SYURIYU} (理由)"
}
capture assert inlist(M_SYURIYU, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_SYURIYU} (理由) may have invalid values (Check layout sheet)"
}


capture count if M_SYUSIGOTO==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_SYUSIGOTO} (仕事の主従)"
}
capture assert inlist(M_SYUSIGOTO, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_SYUSIGOTO} (仕事の主従) may have invalid values (Check layout sheet)"
}


capture count if M_SYUKEITAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_SYUKEITAI} (形態)"
}
capture assert inlist(M_SYUKEITAI, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_SYUKEITAI} (形態) may have invalid values (Check layout sheet)"
}


capture count if M_KYUKATUDO==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_KYUKATUDO} (有無)"
}
capture assert inlist(M_KYUKATUDO, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_KYUKATUDO} (有無) may have invalid values (Check layout sheet)"
}


capture count if M_KYUHIRIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_KYUHIRIYU} (非求職理由)"
}
capture assert inlist(M_KYUHIRIYU, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_KYUHIRIYU} (非求職理由) may have invalid values (Check layout sheet)"
}


capture count if M_KYUHOHO==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_KYUHOHO} (方法)"
}
capture assert inlist(M_KYUHOHO, 1, 2, 3, 4, 5, 6, 7, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_KYUHOHO} (方法) may have invalid values (Check layout sheet)"
}


capture count if M_KYUKIKAN==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_KYUKIKAN} (期間)"
}
capture assert inlist(M_KYUKIKAN, 1, 2, 3, 4, 5, 6, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_KYUKIKAN} (期間) may have invalid values (Check layout sheet)"
}


capture count if M_KIBOJIKI==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_KIBOJIKI} (就業希望時期)"
}
capture assert inlist(M_KIBOJIKI, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_KIBOJIKI} (就業希望時期) may have invalid values (Check layout sheet)"
}


capture count if M_ZSYUGYO==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_ZSYUGYO} (一年前の就業状況)"
}
capture assert inlist(M_ZSYUGYO, 1, 2, 3, 4, 5, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_ZSYUGYO} (一年前の就業状況) may have invalid values (Check layout sheet)"
}


capture count if M_ZENUMU==.
if r(N)==_N {
    display as error "Only missing value: {bf:M_ZENUMU} (前職の有無)"
}
capture assert inlist(M_ZENUMU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:M_ZENUMU} (前職の有無) may have invalid values (Check layout sheet)"
}


capture count if Z_RIJIKI2==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_RIJIKI2} (2区分)"
}
capture assert inlist(Z_RIJIKI2, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_RIJIKI2} (2区分) may have invalid values (Check layout sheet)"
}


capture count if Z_RIJIKINEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_RIJIKINEN} (年)"
}


capture count if Z_RIYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_RIYU} (離職理由)"
}
capture assert inlist(Z_RIYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_RIYU} (離職理由) may have invalid values (Check layout sheet)"
}


capture count if Z_JYUTII==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_JYUTII} (従業上の地位)"
}
capture assert inlist(Z_JYUTII, 1, 2, 3, 4, 5, 6, 7, 8, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_JYUTII} (従業上の地位) may have invalid values (Check layout sheet)"
}


capture count if Z_NOHINOU==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_NOHINOU} (農・非農)"
}
capture assert inlist(Z_NOHINOU, 1, 2, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_NOHINOU} (農・非農) may have invalid values (Check layout sheet)"
}


capture count if Z_SAN3==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_SAN3} (3部門)"
}
capture assert inlist(Z_SAN3, 1, 2, 3, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_SAN3} (3部門) may have invalid values (Check layout sheet)"
}


capture count if Z_SANDAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_SANDAI} (大分類)"
}
capture assert inlist(Z_SANDAI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_SANDAI} (大分類) may have invalid values (Check layout sheet)"
}


capture count if Z_SANCHU==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_SANCHU} (中分類)"
}
capture assert inlist(Z_SANCHU, 1, 2, 3, 6, 8, 9, 12, 14, 16, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 40, 41, 47, 49, 55, 58, 59, 61, 69, 73, 79, 81, 87, 91, 94, 95, 97, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_SANCHU} (中分類) may have invalid values (Check layout sheet)"
}


capture count if Z_SHODAI==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_SHODAI} (大分類)"
}
capture assert inlist(Z_SHODAI, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_SHODAI} (大分類) may have invalid values (Check layout sheet)"
}


capture count if Z_SHOM==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_SHOM} (中間分類)"
}
capture assert inlist(Z_SHOM, 0, 10, 20, 30, 40, 50, 60, 70, 75, 85, 88, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_SHOM} (中間分類) may have invalid values (Check layout sheet)"
}


capture count if Z_KAIKYU==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_KAIKYU} (従業者階級)"
}
capture assert inlist(Z_KAIKYU, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, .)
if _rc!=0 {
    display as error "WARNING: {bf:Z_KAIKYU} (従業者階級) may have invalid values (Check layout sheet)"
}


capture count if Z_KEINEN==.
if r(N)==_N {
    display as error "Only missing value: {bf:Z_KEINEN} (継続年数)"
}


